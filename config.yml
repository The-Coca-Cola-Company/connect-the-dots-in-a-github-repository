title: Working in large repositories
tagline: A brand new course on Learning Lab
description: >-
  This course is meant to teach skills for working in a larger, older repository
  with others. 
template:
  repo: working-in-large-repositories-template
  name: working-in-large-repositories

before:
  - type: createIssue
    title: Welcome!
    body: 00_welcome-issue.md
  - type: createIssue
    title: Welcome to this repository
    body: 00_existing-welcome.md
  - type: create pull request with branch create-documentation-structure with body 00_create-documentation-structure.md
  - type: merge create-documentation-structure branch
  - type: create pull request with branch add-new-pages with body 00_add-new-pages.md
  - type: merge add-new-pages branch
  - type: create a pull request with branch add-navigation with body 00_add-navigation.md
  - type: merge add-navigation branch
  - type: create pull request with branch add-git-tips with body 00_add-git-tips.md
  - type: set status of failing with status api


steps:

# Step 1: 
    - title: Close the linked issue
    description: Close the linked issue
    event: issues.closed
    link: '{{ repoUrl }}'
    actions:
      - type: createIssue with 01_crosslink.md
      - type: respond in both welcome issues with 01_next-step.md

# Step 2: Crosslink
    - title: Create a crosslink
    description: Find the relevant or duplicate issue or pull request, and create a contexual crosslink
    event: issue_comment.created
    link: '{{ repoUrl }}'
    actions:
      - type: gate (Validate that the comment references the correct issue)
      - type: gate (Validate it has some kind of description)
      - response with 02_find-commit.md

# Step 3:
    - title: Find a commit
    description: Find a specific commit (related to content concept of issue in step 2)
    event: issue_comment.created
    link: '{{ repoUrl }}'
    actions:
      - type: gate (Validate for the sha 312f872f79e50d505f02be5ddc97b3f7504d0189 or link or whatever we decide to ask for)
      - respond with 03_context.md

# Step 4: Finding info and context
    - title: Find context
    description: Mention the author in the pull request where commit was created
    event: issue_comment.created
    link: '{{ repoUrl }}'
    actions:
      - type: gate (validate that the proper author is mentioned)
      - type: gate (validate that the comment is in the proper pull request)
      - respond: in the pull request where comment was made, with 04_find-broken-build.md

# Step 5:
    - title: Assign yourself to the pr with broken build
    description: Assign yourself to the pr with broken build
    event: issues.assigned
    link: '{{ repoUrl }}'
    actions:
      - type: respond in the pull request once they assign themselves with 05_fix-build.md

# Step 6: Something to do with tests
    - title: Fix the broken build
    description: Fix the broken build
    event: push
    link: '{{ repoUrl }}'
    actions:
      - type: validate that they did what we said
      - type: send our own build status
      - type: createIssue with 06_congratulations.md
